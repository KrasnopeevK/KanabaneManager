@page "/fetchdata"
@using KanbaneManager.DL.Entities
@using System.Net
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_cars == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Label</th>
            <th>Reg Number</th>
            <th>Last TO</th>
            <th>Next TO</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var car in _cars)
        {
            <tr>
                <td>@car.Id</td>
                <td>@car.Label</td>
                <td>@car.RegNumber</td>
                <td>@car.LastToDate</td>
                <td>@car.NextToDate</td>
                <td>
                    <button class="btn btn-primary" @onclick="@(async () => await EditCar(car.Id))" style="width:110px;">Edit</button>
                </td>
                <td>
                    <button class="btn btn-danger" @onclick="@(async () => await DeleteCar(car.Id))">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Car[] _cars;

    protected override async Task OnInitializedAsync()
    {
        _cars = await Http.GetFromJsonAsync<Car[]>("https://localhost:44327/car");
    }


    private async Task DeleteCar(int carId)
    {
        var outcome = await Http.DeleteAsync($"https://localhost:44327/car/{carId}");
        if (outcome.StatusCode == HttpStatusCode.OK)
        {
            _cars = await Http.GetFromJsonAsync<Car[]>("https://localhost:44327/car");
        }
    }

    private async Task EditCar(int carId)
    {
        throw new NotImplementedException();
    }

}